#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'gtalkback'
require 'gt_progressbar'

require 'FileUtils'   # Used to copy CSS file

# TODO: Fix bug where gaps show in the username/message border in the first log_group
# TODO: Check into outputting prettier HTML or XHTML (indented)t
# TODO: Remove time of day from filename, unless two chats on same day -- then add hour,
# unless there are two chats on the same hour of the same day, then add minutes, etc.
# TODO: Replace nokirigi parser with regexes, nokogiri formatter with ERB
# TODO: Multithread

puts "GMail Chat Backup Utility v1.0"
puts

if (ARGV.length != 2) then
  puts "Error: incorrect number of paramters"
  puts "Usage: chat_extractor.rb database.db ./output_dir"
  abort
end

# TODO: Use more robust argument parsing system
database_file = File.expand_path(ARGV[0])
output_dir = File.expand_path(ARGV[1])

if(File.exist?(output_dir)) then
  abort "Error: Output directory name already in use by a file" if !File.directory?(output_dir)
  abort "Error: unable to write to output directory" if !File.writable?(output_dir)
else
  begin
    Dir.mkdir(output_dir)
  rescue SystemCallError
    abort "Error: Unable to create output directory"
  end
end

# Will not replace an existing style, should it exist
unless File.exist?('style.css') then
  FileUtils.cp(File.expand_path('../../resources', __FILE__) + "/style.css", output_dir + '/style.css')
end

puts "Processing chats . . . "
fetcher = Gtalkback::GTalkFetcher.new(database_file)

fetch_pbar = Gtalkback::ProgressBar.new("Parsing", fetcher.retrieve_number_of_conversations)

conversations = fetcher.fetch_records do
  fetch_pbar.inc
end

fetch_pbar.finish

format_pbar = Gtalkback::ProgressBar.new("Writing", conversations.length)

conversations.each do |convo|
  filename = Time.at(convo.date/1000).strftime('%Y-%m-%d %H.%M.%S')
  filename += ' '
  filename += convo.subject.tr("/\000", "")     # Escape the subject to make it a safe filename
  filename += '.html'
  filename = output_dir + '/' + File.basename(filename)
  
  puts filename if convo.chats.length > 1
  
  File.open(filename, 'w') do |file|
      file.write Gtalkback::NokChatFormatter.format_conversation(convo)
  end
  format_pbar.inc
end

format_pbar.finish